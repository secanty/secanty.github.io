{"version":3,"file":"../../../live2d/js/pio_sdk4.js","names":["loadlive2d","canvas_id","json_object_or_url","on_load","console","log","canvas","document","getElementById","width","removeAttribute","pio_refresh_style","app","stage","removeChildAt","error","model","PIXI","live2d","Live2DModel","fromSync","once","addChild","vertical_factor","height","scale","set","getElementsByClassName","item","className","includes","x","on","hitAreas","motion","expression","_pio_initialize_container","pio_container","createElement","classList","add","id","body","insertAdjacentElement","pio_action","pio_canvas","remove","pio_alignment","_pio_initialize_pixi","Application","view","transparent","autoStart","window","addEventListener"],"sources":["live2d/js/pio_sdk4.js"],"mappings":"AA0BA,SAASA,WAAWC,EAAWC,EAAoBC,GAI/CC,QAAQC,IAAI,2BAEZ,MAAMC,EAASC,SAASC,eAAeP,GAIlB,IAAjBK,EAAOG,QACPH,EAAOI,gBAAgB,UACvBC,qBAIJ,IACIC,IAAIC,MAAMC,cAAc,EAC5B,CAAE,MAAOC,GAET,CAEA,IAAIC,EAAQC,KAAKC,OAAOC,YAAYC,SAASlB,GAuC7C,OArCAc,EAAMK,KAAK,QAAQ,KACfT,IAAIC,MAAMS,SAASN,GAEnB,MAAMO,EAAkBjB,EAAOkB,OAASR,EAAMQ,OAC9CR,EAAMS,MAAMC,IAAIH,GAGhBjB,EAAOG,MAAQO,EAAMP,MACrBH,EAAOkB,OAASR,EAAMQ,OACtBb,oBAGIJ,SAASoB,uBAAuB,iBAAiBC,KAAK,GAAGC,UAAUC,SAAS,QAC5Ed,EAAMe,EAAI,EAEVf,EAAMe,EAAIzB,EAAOG,MAAQO,EAAMP,MAInCO,EAAMgB,GAAG,OAAOC,IACRA,EAASH,SAAS,SAClB1B,QAAQC,IAAI,8BACZW,EAAMkB,OAAO,aAEND,EAASH,SAAS,SACzB1B,QAAQC,IAAI,gCACZW,EAAMkB,OAAO,SAEND,EAASH,SAAS,SAAWG,EAASH,SAAS,WACtD1B,QAAQC,IAAI,uBACZW,EAAMmB,aACV,IAGJhC,EAAQa,EAAK,IAGVA,CACX,CAGA,SAASoB,4BAGL,IAAIC,EAAgB9B,SAAS+B,cAAc,OAC3CD,EAAcE,UAAUC,IAAI,iBAC5BH,EAAcI,GAAK,gBACnBlC,SAASmC,KAAKC,sBAAsB,YAAaN,GAGjD,IAAIO,EAAarC,SAAS+B,cAAc,OACxCM,EAAWL,UAAUC,IAAI,cACzBH,EAAcM,sBAAsB,YAAaC,GAGjD,IAAIC,EAAatC,SAAS+B,cAAc,UACxCO,EAAWJ,GAAK,MAChBJ,EAAcM,sBAAsB,YAAaE,GAEjDzC,QAAQC,IAAI,+BAChB,CAGA,SAASM,oBAIL,IAAI0B,EAAgB9B,SAASoB,uBAAuB,iBAAiBC,KAAK,GAE1ES,EAAcE,UAAUO,OAAO,OAAQ,SACvCT,EAAcE,UAAUC,IAAIO,cAGhC,CAGA,SAASC,uBAILZ,4BAEAxB,IAAM,IAAIK,KAAKgC,YAAY,CACvBC,KAAM3C,SAASC,eAAe,OAC9B2C,aAAa,EACbC,WAAW,IAGfzC,mBACJ,CAKA,IAGIC,IAHAmC,cAAgB,QAIpBM,OAAOC,iBAAiB,mBAAoBN","ignoreList":[],"sourcesContent":["/* ----\n\n# Pio SDK 2/3/4 support\n# By: jupiterbjy\n# Modify: journey-ad\n# Last Update: 2021.5.4\n\nTo use this, you need to include following sources to your HTML file first.\nWith this script, you don't have to include `l2d.js`. Testing is done without it.\nBasic usage is same with Paul-Pio.\n\nMake sure to call `pio_refresh_style()` upon changing styles on anything related to 'pio-container' and it's children.\n\nTo change alignment, modify variable `pio_alignment` to either `left` or `right`, then call `pio_refresh_style()`.\n\n<script src=\"https://cubism.live2d.com/sdk-web/cubismcore/live2dcubismcore.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/gh/dylanNew/live2d/webgl/Live2D/lib/live2d.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/pixi.js@5.3.6/dist/pixi.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/pixi-live2d-display/dist/index.min.js\"></script>\n\nIf you have trouble setting up this, check following example's sources.\nhttps://jupiterbjy.github.io/PaulPio_PIXI_Demo/\n\n---- */\n\n\nfunction loadlive2d(canvas_id, json_object_or_url, on_load) {\n    // Replaces original l2d method 'loadlive2d' for Pio.\n    // Heavily relies on pixi_live2d_display.\n\n    console.log(\"[Pio] Loading new model\")\n\n    const canvas = document.getElementById(canvas_id)\n\n    // When pio was start minimized on browser refresh or reload,\n    // canvas is set to 0, 0 dimension and need to be changed.\n    if (canvas.width === 0) {\n        canvas.removeAttribute(\"height\")\n        pio_refresh_style()\n    }\n\n    // Try to remove previous model, if any exists.\n    try {\n        app.stage.removeChildAt(0)\n    } catch (error) {\n\n    }\n\n    let model = PIXI.live2d.Live2DModel.fromSync(json_object_or_url)\n\n    model.once(\"load\", () => {\n        app.stage.addChild(model)\n\n        const vertical_factor = canvas.height / model.height\n        model.scale.set(vertical_factor)\n\n        // match canvas to model width\n        canvas.width = model.width\n        canvas.height = model.height\n        pio_refresh_style()\n\n        // check alignment, and align model to corner\n        if (document.getElementsByClassName(\"pio-container\").item(0).className.includes(\"left\")){\n            model.x = 0\n        } else {\n            model.x = canvas.width - model.width\n        }\n\n        // Hit callback definition\n        model.on(\"hit\", hitAreas => {\n            if (hitAreas.includes(\"body\")) {\n                console.log(\"[Pio] Touch on body (SDK2)\")\n                model.motion('tap_body')\n\n            } else if (hitAreas.includes(\"Body\")) {\n                console.log(\"[Pio] Touch on body (SDK3/4)\")\n                model.motion(\"Tap\")\n\n            } else if (hitAreas.includes(\"head\") || hitAreas.includes(\"Head\")){\n                console.log(\"[Pio] Touch on head\")\n                model.expression()\n            }\n        })\n        \n        on_load(model)\n    })\n\n    return model\n}\n\n\nfunction _pio_initialize_container(){\n\n    // Generate structure\n    let pio_container = document.createElement(\"div\")\n    pio_container.classList.add(\"pio-container\")\n    pio_container.id = \"pio-container\"\n    document.body.insertAdjacentElement(\"beforeend\", pio_container)\n\n    // Generate action\n    let pio_action = document.createElement(\"div\")\n    pio_action.classList.add(\"pio-action\")\n    pio_container.insertAdjacentElement(\"beforeend\", pio_action)\n\n    // Generate canvas\n    let pio_canvas = document.createElement(\"canvas\")\n    pio_canvas.id = \"pio\"\n    pio_container.insertAdjacentElement(\"beforeend\", pio_canvas)\n\n    console.log(\"[Pio] Initialized container.\")\n}\n\n\nfunction pio_refresh_style(){\n    // Always make sure to call this after container/canvas style changes!\n    // You can set alignment here, but still you can change it manually.\n\n    let pio_container = document.getElementsByClassName(\"pio-container\").item(0)\n\n    pio_container.classList.remove(\"left\", \"right\")\n    pio_container.classList.add(pio_alignment)\n\n    // app.resizeTo = document.getElementById(\"pio\")\n}\n\n\nfunction _pio_initialize_pixi() {\n    // Initialize html elements and pixi app.\n    // Must run before pio init.\n\n    _pio_initialize_container()\n\n    app = new PIXI.Application({\n        view: document.getElementById(\"pio\"),\n        transparent: true,\n        autoStart: true,\n    })\n\n    pio_refresh_style()\n}\n\n\n// change alignment to left by modifying this value in other script.\n// Make sure to call `pio_refresh_style` to apply changes!\nlet pio_alignment = \"right\"\n\n\nlet app\nwindow.addEventListener(\"DOMContentLoaded\", _pio_initialize_pixi)\n"]}